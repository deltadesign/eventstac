{"version":3,"sources":["components/eCard.js","components/addForm.js","components/eTable.js","ApiClient.js","App.js","reportWebVitals.js","index.js"],"names":["Ecard","date","Date","parse","String","this","props","slice","dayOfMonth","getDate","day","getDay","month","getMonth","year","getFullYear","name","location","detail","Button","style","width","variant","attending","onClick","toggleAttend","remove","className","editEvent","React","Component","Add","state","disabled","e","action","preventDefault","setState","event","_id","ApiClient","updateEvent","target","value","addEvent","console","log","then","getEvents","document","getElementById","reset","Form","id","onSubmit","submitHandler","Row","Col","Group","Control","type","defaultValue","placeholder","required","visibility","clearForm","Etable","loading","eventList","getEventList","response","data","removeEvent","map","i","Table","responsive","createEventsList","url","status","Promise","resolve","reject","Error","text","method","axios","catch","error","alert","request","App","Container","Navbar","expand","Brand","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.61c9491f.chunk.js","sourcesContent":["import React from 'react';\r\n//bootstrap components\r\nimport Button from 'react-bootstrap/button';\r\n\r\nclass Ecard extends React.Component {\r\n\r\n  render() {\r\n    const days = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'];\r\n    const months = ['Jan', 'Feb','Mar','Apr','May','Jun','July','Aug','Sept','Oct','Nov','Dec']\r\n    const date = new Date (Date.parse(String(this.props.date).slice(0,10)))\r\n    const dayOfMonth = date.getDate();\r\n    const day = days[date.getDay()];\r\n    const month = months[date.getMonth()];\r\n    const year = date.getFullYear();\r\n    \r\n    return (\r\n        <tr>\r\n        <td>{this.props.name}</td>\r\n        <td>{this.props.location}</td>\r\n        <td>{`${day} ${dayOfMonth}-${month}-${year}`}</td>\r\n        <td>{this.props.detail}</td>\r\n        <td> <Button style={{width: '3em'}} variant ={this.props.attending ? \"success\" : \"secondary\"} onClick = {() => this.props.toggleAttend()}>{this.props.attending ? \"Yes\":\"No\"}</Button></td>\r\n        <td>\r\n            <Button variant ='outline-danger' onClick = {() => this.props.remove()} >X</Button>\r\n            <Button variant = 'outline-info' className ='ml-2' onClick = {() => this.props.editEvent()}>Edit</Button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Ecard;","import React from 'react';\r\n\r\n//Bootstrap Components\r\nimport Form from 'react-bootstrap/form';\r\nimport Col from 'react-bootstrap/col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass Add extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      disabled: false,  \r\n    }\r\n  }\r\n\r\n  submitHandler(e){\r\n    e.preventDefault()\r\n    this.setState({disabled:true})\r\n    let action;\r\n    if (this.props.event._id) {\r\n      action = this.props.ApiClient.updateEvent(\r\n        this.props.event._id, \r\n        e.target.name.value , \r\n        e.target.location.value , \r\n        e.target.date.value , \r\n        e.target.detail.value)\r\n    } else {\r\n      action = this.props.ApiClient.addEvent(\r\n        e.target.name.value, \r\n        e.target.location.value, \r\n        e.target.date.value, \r\n        e.target.detail.value)}\r\n        console.log(action)\r\n    action.then(() => {\r\n      this.setState({disabled: false})\r\n      this.props.getEvents()\r\n      document.getElementById(\"addform\").reset()\r\n    })\r\n  }\r\n\r\n  clearForm(){\r\n    this.props.getEvents()\r\n    document.getElementById(\"addform\").reset()  \r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <>\r\n      {/* <pre>AddForm = {JSON.stringify(this.state)}</pre>\r\n      <pre>Editing = {JSON.stringify(this.props.event)}</pre>\r\n      <pre>status = {this.props.event._id? 'Update': 'New' }</pre> */}\r\n        <Form id = \"addform\" className=\"mt-2 mb-2\" onSubmit = {(e) => this.submitHandler(e)}>\r\n          {/* FIRST ROW */}\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Group>\r\n                <Form.Control \r\n                  name=\"name\" \r\n                  type = \"text\"\r\n                  defaultValue = {this.props.event?.name}\r\n                  placeholder=\"Event Name\" \r\n                  // onChange = {(e) => this.changeHandler(e)}\r\n                  disabled = {this.state.disabled}\r\n                  required\r\n                  />\r\n              </Form.Group>\r\n            </Col>\r\n          </Form.Row>\r\n          {/* SECOND ROW */}\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Group>\r\n                <Form.Control \r\n                  name=\"location\" \r\n                  defaultValue = {this.props.event?.location}\r\n                  type = \"text\" \r\n                  placeholder=\"Location\" \r\n                  // onChange = {(e) => this.changeHandler(e)}\r\n                  disabled = {this.state.disabled}\r\n                  required\r\n                  />\r\n              </Form.Group>\r\n            </Col>\r\n          </Form.Row>\r\n          {/* THIRD ROW */}\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Group>\r\n                <Form.Control \r\n                  name=\"date\" \r\n                  defaultValue = {this.props.event?.date}\r\n                  type = \"date\" \r\n                  disabled = {this.state.disabled}\r\n                  required\r\n                  />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              {/* <Form.Group controlId=\"time\">\r\n                <Form.Control \r\n                  name=\"time\"\r\n                  defaultValue = {this.props.event?.time}\r\n                  type = \"time\" \r\n                  disabled = {this.state.disabled}\r\n                  />\r\n              </Form.Group> */}\r\n            </Col>\r\n          </Form.Row>\r\n          {/* FOURTH ROW */}\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Group>\r\n                <Form.Control \r\n                  name=\"detail\" \r\n                  defaultValue = {this.props.event?.detail} \r\n                  type = \"text\" \r\n                  placeholder=\"Summary\" \r\n                  disabled = {this.state.disabled}\r\n                  required\r\n                  />\r\n              </Form.Group>\r\n            </Col>\r\n          </Form.Row>\r\n\r\n          <Button \r\n            className = 'mr-2'\r\n            variant = \"outline-success\" \r\n            type = \"submit\" disabled = {this.state.disabled}>\r\n            {this.props.event?.name ? 'Update':'Submit'}</Button>\r\n\r\n          <Button \r\n            style = {{visibility: this.props.event._id? 'visible' : 'hidden'}}\r\n            variant = \"outline-danger\"\r\n            onClick = {() => this.clearForm()}\r\n            >Cancel</Button>\r\n\r\n        </Form>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Add;","import React from 'react';\r\n\r\n//components\r\nimport Ecard from './eCard';\r\nimport Add from './addForm';\r\n\r\n//Bootstrap\r\nimport Table from 'react-bootstrap/table';\r\n\r\nclass Etable extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loading : true,\r\n      eventList : [],\r\n      editEvent: \"\"\r\n    }\r\n  }\r\n\r\n  //Sets State of App.js to the event list retrived from the API\r\n  getEvents() {\r\n    this.props.ApiClient.getEventList()\r\n    .then((response) => this.setState({\r\n      loading: false,\r\n      eventList: response.data,\r\n      editEvent: []\r\n    }))\r\n    // this.forceUpdate();\r\n  }\r\n\r\n  // removes an event from the list\r\n  removeEvent(id) {\r\n    this.props.ApiClient.removeEvent(id)\r\n    .then(() => this.getEvents()) \r\n  }\r\n\r\n  // sets the event to be edited in state - which is then passed to Add for updating. \r\n  editEvent(id, name, location, date, detail) {\r\n    this.setState({\r\n      editEvent: {\r\n      _id: id,\r\n      name: name,\r\n      location: location,\r\n      date: date, \r\n      detail: detail}\r\n    }) \r\n  }\r\n\r\n  // toggles attending status\r\n  toggleAttend(id) {\r\n    this.props.ApiClient.toggleAttend(id)\r\n    .then(() => this.getEvents()) \r\n  }\r\n\r\n  //Lifecycle method - calls the required functions to start the app\r\n  componentDidMount() {\r\n    this.getEvents()\r\n  }\r\n\r\n  // creates a table of events from state\r\n  createEventsList(){\r\n    return this.state.eventList.map((event, i) => (\r\n      <Ecard key = {i}\r\n      _id = {event._id}\r\n      name = {event.name}\r\n      location = {event.location}\r\n      date = {event.date}\r\n      detail = {event.detail}\r\n      attending = {event.attending} \r\n      remove = {(i) => this.removeEvent(event._id)}\r\n      toggleAttend = {(i) => this.toggleAttend(event._id)}\r\n      editEvent = {(i) => this.editEvent(event._id, event.name, event.location, String(event.date).slice(0, 10), event.detail)} />\r\n      ))\r\n    }\r\n\r\n    render(){\r\n      return (\r\n        <>\r\n        {/* <h4>Helper stuff FORM</h4> */}\r\n        <Add ApiClient = {this.props.ApiClient} \r\n             getEvents = {() => this.getEvents()}\r\n             event = {this.state.editEvent}     \r\n        />\r\n        {/* <h4>Helper stuff TABLE</h4>\r\n        <h2>{this.state.eventList.length} events</h2>\r\n        <pre>{JSON.stringify(this.state.editEvent)}</pre> */}\r\n        <Table responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>Event</th>\r\n              <th>Location</th>\r\n              <th>Date</th>\r\n              <th>Summary</th>\r\n              <th>Attending</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.createEventsList()}\r\n          </tbody>\r\n        </Table>\r\n        </>\r\n      )\r\n  }\r\n} \r\n\r\nexport default Etable;","import axios from 'axios';\r\nconst url = 'https://cors-anywhere.herokuapp.com/https://eventstac.herokuapp.com/'\r\n\r\nexport class ApiClient {\r\n\r\n  status(response) {\r\n    if (response.status >= 200 && response.status < 300) {\r\n      return Promise.resolve(response);\r\n    } else {\r\n      return Promise.reject(new Error (response.text));\r\n    }\r\n  }\r\n\r\n  request(method , url , data) {\r\n    return axios({\r\n      method,\r\n      url,\r\n      data\r\n    })\r\n    .then(this.status)\r\n    .catch((error) => {\r\n      console.log(error)\r\n      alert(error)\r\n    })\r\n  }\r\n \r\n  // return list of all events\r\n  //https://eventstac.herokuapp.com/events\r\n  getEventList() {\r\n    return this.request('get' ,`${url}events`);\r\n  }\r\n  // delete event\r\n  //https://eventstac.herokuapp.com/event/delete\r\n  removeEvent(id){\r\n    return this.request( 'delete' , `${url}event/${id}`); \r\n  }\r\n  // add event\r\n  //https://eventstac.herokuapp.com/event/create\r\n  addEvent(name, location, date, detail){\r\n    return this.request('post' , `${url}event/create`, { name, location, date, detail })\r\n  }\r\n  //toggleattend\r\n  //https://eventstac.herokuapp.com/attend/<id>\r\n  toggleAttend(id){\r\n    return this.request('put', `${url}attend/${id}`)\r\n  }\r\n  //update event \r\n  //https://eventstac.herokuapp.com/event/<id>\r\n  updateEvent(id, name, location, date, detail){\r\n    return this.request('put', `${url}/event/${id}`, { name, location, date, detail } )\r\n  }\r\n}","//https://deltadesign.github.io/eventstac/\n\nimport React from 'react';\n\n//components\nimport Etable from './components/eTable';\nimport { ApiClient } from './ApiClient';\n\n// bootstrap Components\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\n\n// Application CSS\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ApiClient = new ApiClient();\n  }\n\n  render() {\n  return (\n    <>\n      <Container className=\"App\">\n\n        <Navbar variant=\"dark\" expand=\"sm\" className=\" mt-2 navbar\">\n          <Navbar.Brand>EventStagram</Navbar.Brand>\n        </Navbar>\n\n        <Etable ApiClient = {this.ApiClient}/>\n\n      </Container>\n    </>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}