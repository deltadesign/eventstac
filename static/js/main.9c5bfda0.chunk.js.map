{"version":3,"sources":["components/addForm.js","components/eCard.js","components/eTable.js","ApiClient.js","App.js","reportWebVitals.js","index.js"],"names":["Add","props","state","name","location","date","detail","e","newstate","target","value","this","setState","preventDefault","console","log","Form","className","onSubmit","submitHandler","Row","Col","Group","controlId","Control","type","placeholder","Button","variant","React","Component","Ecard","attending","onClick","remove","Etable","loading","eventList","getEvents","ApiClient","getEventList","then","response","data","length","id","removeEvent","map","event","i","_id","Table","createEventsList","JSON","stringify","url","status","Promise","resolve","reject","Error","text","method","axios","catch","error","alert","request","App","Container","Navbar","expand","Brand","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c5bfda0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n//Bootstrap Components\r\nimport Form from 'react-bootstrap/form';\r\nimport Col from 'react-bootstrap/col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass Add extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      name:\"\",\r\n      location:\"\",\r\n      date:\"\",\r\n      detail:\"\"\r\n    }\r\n  }\r\n\r\n  changeHandler(e) {\r\n    const newstate ={};\r\n    newstate[e.target.name] = e.target.value;\r\n    this.setState(newstate)\r\n  }\r\n\r\n  submitHandler(e){\r\n    e.preventDefault()\r\n    console.log(e)\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <>\r\n        <Form className=\"mt-2 mb-2\" onSubmit = {(e) => this.submitHandler(e)}>\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Group controlId=\"name\">\r\n                <Form.Control name=\"name\" type = \"text\" placeholder=\"Event Name\"/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Group controlId=\"location\">\r\n                <Form.Control name=\"location\" type = \"text\" placeholder=\"Location\"/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Group controlId=\"date\">\r\n                <Form.Control name=\"date\" type = \"date\"/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group controlId=\"date\">\r\n                <Form.Control name=\"date\" type = \"time\"/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Group controlId=\"detail\">\r\n                <Form.Control name=\"detail\" type = \"text\" placeholder=\"Summary\"/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Form.Row>\r\n\r\n          <Button variant = \"outline-success\" type = \"submit\">Submit</Button>\r\n          \r\n        </Form>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Add;","import React from 'react';\r\n//bootstrap components\r\nimport Button from 'react-bootstrap/button';\r\n\r\nclass Ecard extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n    <tr>\r\n      <td>{this.props.name}</td>\r\n      <td>{this.props.location}</td>\r\n      <td>{this.props.date}</td>\r\n      <td>{this.props.detail}</td>\r\n      <td>{this.props.attending ? <p>Yes</p>:<p>No</p>}</td>\r\n      <td><Button variant ='outline-danger' onClick = {() => this.props.remove()} >X</Button></td>\r\n    </tr>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Ecard;","import React from 'react';\r\n\r\n//components\r\nimport Ecard from './eCard';\r\n\r\n//Bootstrap\r\nimport Table from 'react-bootstrap/table';\r\n\r\nclass Etable extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loading : true,\r\n      eventList : []\r\n    }\r\n  }\r\n\r\n  //Lifecycle method - calls the required functions to start the app\r\n  componentDidMount() {\r\n    this.getEvents()\r\n  }\r\n\r\n  //Sets State of App.js to the event list retrived from the API\r\n  getEvents() {\r\n    this.props.ApiClient.getEventList()\r\n    .then((response) => this.setState({\r\n      loading: false,\r\n      eventList: response.data}\r\n    ))\r\n    console.log(this.state.eventList.length)\r\n  }\r\n\r\n  // removes an event from the list\r\n  remove(id){\r\n    this.props.ApiClient.removeEvent(id)\r\n    .then(this.getEvents())\r\n  }\r\n\r\n  // creates a table of events from state\r\n  createEventsList(){\r\n    return this.state.eventList.map((event, i) => (\r\n      <Ecard key = {i}\r\n      _id = {event._id}\r\n      name = {event.name}\r\n      location = {event.location}\r\n      date = {event.date}\r\n      detail = {event.detail}\r\n      attending = {event.attending} \r\n      remove = {(i) => this.remove(event._id)} />\r\n      ))\r\n    }\r\n\r\n    render(){\r\n      return (\r\n        <>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>Event</th>\r\n              <th>Location</th>\r\n              <th>Date</th>\r\n              <th>Summary</th>\r\n              <th>Attending</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.createEventsList()}\r\n          </tbody>\r\n        </Table>\r\n        <pre>{JSON.stringify(this.state)}</pre>\r\n        </>\r\n      )\r\n  }\r\n} \r\n\r\nexport default Etable;","import axios from 'axios';\r\nconst url = 'https://cors-anywhere.herokuapp.com/https://eventstac.herokuapp.com/'\r\n\r\nexport class ApiClient {\r\n\r\n  status(response) {\r\n    if (response.status >= 200 && response.status < 300) {\r\n      return Promise.resolve(response);\r\n    } else {\r\n      return Promise.reject(new Error (response.text));\r\n    }\r\n  }\r\n\r\n  request(method , url) {\r\n    return axios({\r\n      method,\r\n      url\r\n    })\r\n    .then(this.status)\r\n    .catch((error) => {\r\n      console.log(error)\r\n      alert(error)\r\n    })\r\n  }\r\n \r\n  // return list of all events\r\n  //https://eventstac.herokuapp.com/events\r\n  getEventList() {\r\n    return this.request('get' ,`${url}events`);\r\n  }\r\n  // delete event\r\n  //https://eventstac.herokuapp.com/event/delete\r\n  removeEvent(id){\r\n    return this.request( 'delete' , `${url}event/${id}`); \r\n  }\r\n  // add event\r\n  //https://eventstac.herokuapp.com/event/create\r\n  addEvent(){\r\n\r\n  }\r\n  //update event \r\n  //https://eventstac.herokuapp.com/event/<id>\r\n  updateEvent(){\r\n\r\n  }\r\n}","//https://deltadesign.github.io/eventstac/\n\nimport React from 'react';\n\n//components\nimport Add from './components/addForm'\nimport Etable from './components/eTable';\nimport { ApiClient } from './ApiClient';\n\n// bootstrap Components\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\n\n// Application CSS\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ApiClient = new ApiClient();\n  }\n\n  render() {\n  return (\n    <>\n      <Container className=\"App\">\n\n        <Navbar variant=\"dark\" expand=\"sm\" className=\"navbar\">\n          <Navbar.Brand>EventStagram</Navbar.Brand>\n        </Navbar>\n\n        <Add />\n\n        <Etable ApiClient = {this.ApiClient} />\n\n      </Container>\n\n    </>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}