{"version":3,"sources":["components/eCard.js","components/addForm.js","components/eTable.js","ApiClient.js","App.js","reportWebVitals.js","index.js"],"names":["Ecard","this","props","name","location","date","detail","Button","style","width","variant","attending","onClick","toggleAttend","remove","className","editEvent","React","Component","Add","state","disabled","e","newstate","target","value","setState","action","preventDefault","event","ApiClient","updateEvent","_id","addEvent","console","log","then","getEvents","document","getElementById","reset","JSON","stringify","editing","String","slice","Form","id","onSubmit","submitHandler","Row","Col","Group","controlId","Control","type","defaultValue","placeholder","onChange","changeHandler","required","time","Etable","loading","eventList","getEventList","response","data","removeEvent","map","i","length","Table","responsive","createEventsList","url","status","Promise","resolve","reject","Error","text","method","axios","catch","error","alert","request","App","Container","Navbar","expand","Brand","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b34a9f61.chunk.js","sourcesContent":["import React from 'react';\r\n//bootstrap components\r\nimport Button from 'react-bootstrap/button';\r\n\r\nclass Ecard extends React.Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n        <tr>\r\n        <td>{this.props.name}</td>\r\n        <td>{this.props.location}</td>\r\n        <td>{this.props.date}</td>\r\n        <td>{this.props.detail}</td>\r\n        <td> <Button style={{width: '3em'}} variant ={this.props.attending ? \"success\" : \"secondary\"} onClick = {() => this.props.toggleAttend()}>{this.props.attending ? \"Yes\":\"No\"}</Button></td>\r\n        <td>\r\n            <Button variant ='outline-danger' onClick = {() => this.props.remove()} >X</Button>\r\n            <Button variant = 'outline-info' className ='ml-2' onClick = {() => this.props.editEvent()}>Edit</Button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Ecard;","import React from 'react';\r\n\r\n//Bootstrap Components\r\nimport Form from 'react-bootstrap/form';\r\nimport Col from 'react-bootstrap/col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass Add extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      disabled: false,  \r\n    }\r\n  }\r\n\r\n  changeHandler(e) {\r\n    const newstate ={};\r\n    newstate[e.target.name] = e.target.value;\r\n    this.setState(newstate)\r\n  }\r\n\r\n  submitHandler(e){\r\n    e.preventDefault()\r\n    this.setState({disabled:true})\r\n    let action;\r\n    if (this.props.event) {\r\n      action = this.props.ApiClient.updateEvent(\r\n        this.props.event._id, \r\n        e.target.name.value , \r\n        e.target.location.value , \r\n        e.target.date.value , \r\n        e.target.detail.value)\r\n    } else {\r\n      action = this.props.ApiClient.addEvent(\r\n        e.target.name.value, \r\n        e.target.location.value, \r\n        e.target.date.value, \r\n        e.target.detail.value)}\r\n        console.log(action)\r\n    action.then(() => {\r\n      this.setState({disabled: false})\r\n      this.props.getEvents()\r\n      document.getElementById(\"addform\").reset()\r\n    })\r\n  }\r\n\r\n  clearForm(){\r\n    console.log('Clicked')    \r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <>\r\n      <pre>AddForm = {JSON.stringify(this.state)}</pre>\r\n      <pre>Editing = {JSON.stringify(this.state.editing)}</pre>\r\n      <pre>Editing = {JSON.stringify(this.props.event)}</pre>\r\n      <pre>date = {String(this.props.event.date).slice(0,10)}</pre>\r\n        <Form id = \"addform\" className=\"mt-2 mb-2\" onSubmit = {(e) => this.submitHandler(e)}>\r\n          {/* FIRST ROW */}\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Group controlId=\"name\">\r\n                <Form.Control \r\n                  name=\"name\" \r\n                  type = \"text\"\r\n                  defaultValue = {this.props.event?.name}\r\n                  placeholder=\"Event Name\" \r\n                  onChange = {(e) => this.changeHandler(e)}\r\n                  disabled = {this.state.disabled}\r\n                  required\r\n                  />\r\n              </Form.Group>\r\n            </Col>\r\n          </Form.Row>\r\n          {/* SECOND ROW */}\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Group controlId=\"location\">\r\n                <Form.Control \r\n                  name=\"location\" \r\n                  defaultValue = {this.props.event?.location}\r\n                  type = \"text\" \r\n                  placeholder=\"Location\" \r\n                  onChange = {(e) => this.changeHandler(e)}\r\n                  disabled = {this.state.disabled}\r\n                  required\r\n                  />\r\n              </Form.Group>\r\n            </Col>\r\n          </Form.Row>\r\n          {/* THIRD ROW */}\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Group controlId=\"date\">\r\n                <Form.Control \r\n                  name=\"date\" \r\n                  defaultValue = {String(this.props.event?.date).slice(0,10)}\r\n                  type = \"date\" \r\n                  onChange = {(e) => this.changeHandler(e)}\r\n                  disabled = {this.state.disabled}\r\n                  required\r\n                  />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group controlId=\"time\">\r\n                <Form.Control \r\n                  name=\"time\"\r\n                  defaultValue = {this.state.time}\r\n                  type = \"time\" \r\n                  onChange = {(e) => this.changeHandler(e)}\r\n                  disabled = {this.state.disabled}\r\n                  />\r\n              </Form.Group>\r\n            </Col>\r\n          </Form.Row>\r\n          {/* FOURTH ROW */}\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Group controlId=\"detail\">\r\n                <Form.Control \r\n                  name=\"detail\" \r\n                  defaultValue = {this.props.event?.detail} \r\n                  type = \"text\" \r\n                  placeholder=\"Summary\" \r\n                  onChange = {(e) => this.changeHandler(e)}\r\n                  disabled = {this.state.disabled}\r\n                  required\r\n                  />\r\n              </Form.Group>\r\n            </Col>\r\n          </Form.Row>\r\n\r\n          <Button \r\n            className = 'mr-2'\r\n            variant = \"outline-success\" \r\n            type = \"submit\" disabled = {this.state.disabled}>\r\n            {this.props.event.name ? 'Update':'Submit'}</Button>\r\n\r\n          {/* <Button \r\n            style = {{visibility: this.props.event.name ? 'visible' : 'hidden'}}\r\n            variant = \"outline-danger\"\r\n            onClick = {() => this.clearForm()}\r\n            >Cancel</Button> */}\r\n\r\n        </Form>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Add;","import React from 'react';\r\n\r\n//components\r\nimport Ecard from './eCard';\r\nimport Add from './addForm';\r\n\r\n//Bootstrap\r\nimport Table from 'react-bootstrap/table';\r\n\r\nclass Etable extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loading : true,\r\n      eventList : [],\r\n      editEvent: []\r\n    }\r\n  }\r\n\r\n  //Sets State of App.js to the event list retrived from the API\r\n  getEvents() {\r\n    this.props.ApiClient.getEventList()\r\n    .then((response) => this.setState({\r\n      loading: false,\r\n      eventList: response.data,\r\n      editEvent: []\r\n    }))\r\n    // this.forceUpdate();\r\n  }\r\n\r\n  // removes an event from the list\r\n  removeEvent(id) {\r\n    this.props.ApiClient.removeEvent(id)\r\n    .then(() => this.getEvents()) \r\n  }\r\n\r\n  // sets the event to be edited in state - which is then passed to Add for updating. \r\n  editEvent(id, name, location, date, detail) {\r\n    this.setState({\r\n      editEvent: {\r\n      _id: id,\r\n      name: name,\r\n      location: location,\r\n      date: date, \r\n      detail: detail}\r\n    }) \r\n  }\r\n\r\n  // toggles attending status\r\n  toggleAttend(id) {\r\n    this.props.ApiClient.toggleAttend(id)\r\n    .then(() => this.getEvents()) \r\n  }\r\n\r\n  //Lifecycle method - calls the required functions to start the app\r\n  componentDidMount() {\r\n    this.getEvents()\r\n  }\r\n\r\n  // creates a table of events from state\r\n  createEventsList(){\r\n    return this.state.eventList.map((event, i) => (\r\n      <Ecard key = {i}\r\n      _id = {event._id}\r\n      name = {event.name}\r\n      location = {event.location}\r\n      date = {event.date}\r\n      detail = {event.detail}\r\n      attending = {event.attending} \r\n      remove = {(i) => this.removeEvent(event._id)}\r\n      toggleAttend = {(i) => this.toggleAttend(event._id)}\r\n      editEvent = {(i) => this.editEvent(event._id, event.name, event.location, event.date, event.detail)} />\r\n      ))\r\n    }\r\n\r\n    render(){\r\n      return (\r\n        <>\r\n        {/* <h4>Helper stuff FORM</h4> */}\r\n        <Add ApiClient = {this.props.ApiClient} \r\n             getEvents = {() => this.getEvents()}\r\n             event = {this.state.editEvent}     \r\n        />\r\n        <h4>Helper stuff TABLE</h4>\r\n        <h2>{this.state.eventList.length} events</h2>\r\n        <pre>{JSON.stringify(this.state.editEvent)}</pre>\r\n        <Table responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>Event</th>\r\n              <th>Location</th>\r\n              <th>Date</th>\r\n              <th>Summary</th>\r\n              <th>Attending</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.createEventsList()}\r\n          </tbody>\r\n        </Table>\r\n        </>\r\n      )\r\n  }\r\n} \r\n\r\nexport default Etable;","import axios from 'axios';\r\nconst url = 'https://cors-anywhere.herokuapp.com/https://eventstac.herokuapp.com/'\r\n\r\nexport class ApiClient {\r\n\r\n  status(response) {\r\n    if (response.status >= 200 && response.status < 300) {\r\n      return Promise.resolve(response);\r\n    } else {\r\n      return Promise.reject(new Error (response.text));\r\n    }\r\n  }\r\n\r\n  request(method , url , data) {\r\n    return axios({\r\n      method,\r\n      url,\r\n      data\r\n    })\r\n    .then(this.status)\r\n    .catch((error) => {\r\n      console.log(error)\r\n      alert(error)\r\n    })\r\n  }\r\n \r\n  // return list of all events\r\n  //https://eventstac.herokuapp.com/events\r\n  getEventList() {\r\n    return this.request('get' ,`${url}events`);\r\n  }\r\n  // delete event\r\n  //https://eventstac.herokuapp.com/event/delete\r\n  removeEvent(id){\r\n    return this.request( 'delete' , `${url}event/${id}`); \r\n  }\r\n  // add event\r\n  //https://eventstac.herokuapp.com/event/create\r\n  addEvent(name, location, date, detail){\r\n    return this.request('post' , `${url}event/create`, { name, location, date, detail })\r\n  }\r\n  //toggleattend\r\n  //https://eventstac.herokuapp.com/attend/<id>\r\n  toggleAttend(id){\r\n    return this.request('put', `${url}attend/${id}`)\r\n  }\r\n  //update event \r\n  //https://eventstac.herokuapp.com/event/<id>\r\n  updateEvent(id, name, location, date, detail){\r\n    return this.request('put', `${url}/event/${id}`, { name, location, date, detail } )\r\n  }\r\n}","//https://deltadesign.github.io/eventstac/\n\nimport React from 'react';\n\n//components\nimport Etable from './components/eTable';\nimport { ApiClient } from './ApiClient';\n\n// bootstrap Components\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\n\n// Application CSS\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ApiClient = new ApiClient();\n  }\n\n  render() {\n  return (\n    <>\n      <Container className=\"App\">\n\n        <Navbar variant=\"dark\" expand=\"sm\" className=\" mt-2 navbar\">\n          <Navbar.Brand>EventStagram</Navbar.Brand>\n        </Navbar>\n\n        <Etable ApiClient = {this.ApiClient}/>\n\n      </Container>\n    </>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}