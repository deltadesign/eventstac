{"version":3,"sources":["components/eCard.js","components/addForm.js","components/eTable.js","ApiClient.js","App.js","reportWebVitals.js","index.js"],"names":["Ecard","this","props","name","location","date","detail","Button","style","width","variant","attending","onClick","toggleAttend","remove","className","editEvent","React","Component","Add","state","disabled","e","newstate","target","value","setState","preventDefault","ApiClient","addEvent","then","getEvents","document","getElementById","reset","JSON","stringify","editing","event","String","slice","Form","id","onSubmit","submitHandler","Row","Col","Group","controlId","Control","type","defaultValue","placeholder","onChange","changeHandler","required","time","Etable","loading","eventList","getEventList","response","data","removeEvent","_id","map","i","length","Table","responsive","createEventsList","url","status","Promise","resolve","reject","Error","text","method","axios","catch","error","console","log","alert","request","App","Container","Navbar","expand","Brand","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"kPAwBeA,E,uKAlBH,IAAD,OAEP,OACI,+BACA,6BAAKC,KAAKC,MAAMC,OAChB,6BAAKF,KAAKC,MAAME,WAChB,6BAAKH,KAAKC,MAAMG,OAChB,6BAAKJ,KAAKC,MAAMI,SAChB,mCAAK,cAACC,EAAA,EAAD,CAAQC,MAAO,CAACC,MAAO,OAAQC,QAAUT,KAAKC,MAAMS,UAAY,UAAY,YAAaC,QAAW,kBAAM,EAAKV,MAAMW,gBAArH,SAAsIZ,KAAKC,MAAMS,UAAY,MAAM,UACxK,+BACI,cAACJ,EAAA,EAAD,CAAQG,QAAS,iBAAiBE,QAAW,kBAAM,EAAKV,MAAMY,UAA9D,eACA,cAACP,EAAA,EAAD,CAAQG,QAAU,eAAeK,UAAW,OAAOH,QAAW,kBAAM,EAAKV,MAAMc,aAA/E,4B,GAbQC,IAAMC,W,eC+HXC,E,kDA3Hb,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IACDkB,MAAQ,CACXC,UAAU,GAHK,E,0DAOLC,GACZ,IAAMC,EAAU,GAChBA,EAASD,EAAEE,OAAOrB,MAAQmB,EAAEE,OAAOC,MACnCxB,KAAKyB,SAASH,K,oCAGFD,GAAG,IAAD,OACdA,EAAEK,iBACF1B,KAAKyB,SAAS,CAACL,UAAS,IAExBpB,KAAKC,MAAM0B,UAAUC,SAAS5B,KAAKmB,MAAMjB,KAAOF,KAAKmB,MAAMhB,SAAWH,KAAKmB,MAAMf,KAAOJ,KAAKmB,MAAMd,QAClGwB,MAAK,WACJ,EAAKJ,SAAS,CAACL,UAAU,IACzB,EAAKnB,MAAM6B,YACXC,SAASC,eAAe,WAAWC,a,+BAI9B,IAAD,eACN,OACE,qCACA,6CAAgBC,KAAKC,UAAUnC,KAAKmB,UACpC,6CAAgBe,KAAKC,UAAUnC,KAAKmB,MAAMiB,YAC1C,6CAAgBF,KAAKC,UAAUnC,KAAKC,MAAMoC,UAC1C,0CAAaC,OAAOtC,KAAKC,MAAMoC,MAAMjC,MAAMmC,MAAM,EAAE,OACjD,eAACC,EAAA,EAAD,CAAMC,GAAK,UAAU3B,UAAU,YAAY4B,SAAY,SAACrB,GAAD,OAAO,EAAKsB,cAActB,IAAjF,UAEE,cAACmB,EAAA,EAAKI,IAAN,UACE,cAACC,EAAA,EAAD,UACE,cAACL,EAAA,EAAKM,MAAN,CAAYC,UAAU,OAAtB,SACE,cAACP,EAAA,EAAKQ,QAAN,CACE9C,KAAK,OAAO+C,KAAO,OACnBC,aAAY,UAAIlD,KAAKC,MAAMoC,aAAf,aAAI,EAAkBnC,KAClCiD,YAAY,aACZC,SAAY,SAAC/B,GAAD,OAAO,EAAKgC,cAAchC,IACtCD,SAAYpB,KAAKmB,MAAMC,SACvBkC,UAAQ,UAMhB,cAACd,EAAA,EAAKI,IAAN,UACE,cAACC,EAAA,EAAD,UACE,cAACL,EAAA,EAAKM,MAAN,CAAYC,UAAU,WAAtB,SACE,cAACP,EAAA,EAAKQ,QAAN,CACE9C,KAAK,WACLgD,aAAY,UAAIlD,KAAKC,MAAMoC,aAAf,aAAI,EAAkBlC,SAClC8C,KAAO,OACPE,YAAY,WACZC,SAAY,SAAC/B,GAAD,OAAO,EAAKgC,cAAchC,IACtCD,SAAYpB,KAAKmB,MAAMC,SACvBkC,UAAQ,UAMhB,eAACd,EAAA,EAAKI,IAAN,WACE,cAACC,EAAA,EAAD,UACE,cAACL,EAAA,EAAKM,MAAN,CAAYC,UAAU,OAAtB,SACE,cAACP,EAAA,EAAKQ,QAAN,CACE9C,KAAK,OACLgD,aAAgBZ,OAAM,UAACtC,KAAKC,MAAMoC,aAAZ,aAAC,EAAkBjC,MAAMmC,MAAM,EAAE,IACvDU,KAAO,OACPG,SAAY,SAAC/B,GAAD,OAAO,EAAKgC,cAAchC,IACtCD,SAAYpB,KAAKmB,MAAMC,SACvBkC,UAAQ,QAId,cAACT,EAAA,EAAD,UACE,cAACL,EAAA,EAAKM,MAAN,CAAYC,UAAU,OAAtB,SACE,cAACP,EAAA,EAAKQ,QAAN,CACE9C,KAAK,OACLgD,aAAgBlD,KAAKmB,MAAMoC,KAC3BN,KAAO,OACPG,SAAY,SAAC/B,GAAD,OAAO,EAAKgC,cAAchC,IACtCD,SAAYpB,KAAKmB,MAAMC,kBAM/B,cAACoB,EAAA,EAAKI,IAAN,UACE,cAACC,EAAA,EAAD,UACE,cAACL,EAAA,EAAKM,MAAN,CAAYC,UAAU,SAAtB,SACE,cAACP,EAAA,EAAKQ,QAAN,CACE9C,KAAK,SACLgD,aAAY,UAAIlD,KAAKC,MAAMoC,aAAf,aAAI,EAAkBhC,OAClC4C,KAAO,OACPE,YAAY,UACZC,SAAY,SAAC/B,GAAD,OAAO,EAAKgC,cAAchC,IACtCD,SAAYpB,KAAKmB,MAAMC,SACvBkC,UAAQ,UAMhB,cAAChD,EAAA,EAAD,CACEQ,UAAY,OACZL,QAAU,kBACVwC,KAAO,SAAS7B,SAAYpB,KAAKmB,MAAMC,SAHzC,SAIGpB,KAAKC,MAAMoC,MAAMnC,KAAO,SAAS,qB,GAhH5Bc,IAAMC,W,QCmGTuC,E,kDAhGb,WAAYvD,GAAQ,IAAD,8BACjB,cAAMA,IACDkB,MAAQ,CACXsC,SAAU,EACVC,UAAY,GACZ3C,UAAW,IALI,E,wDAUN,IAAD,OACVf,KAAKC,MAAM0B,UAAUgC,eACpB9B,MAAK,SAAC+B,GAAD,OAAc,EAAKnC,SAAS,CAChCgC,SAAS,EACTC,UAAWE,EAASC,KACpB9C,UAAW,U,kCAMH0B,GAAK,IAAD,OACdzC,KAAKC,MAAM0B,UAAUmC,YAAYrB,GAChCZ,MAAK,kBAAM,EAAKC,iB,gCAITW,EAAIvC,EAAMC,EAAUC,EAAMC,GAClCL,KAAKyB,SAAS,CACZV,UAAW,CACXgD,IAAKtB,EACLvC,KAAMA,EACNC,SAAUA,EACVC,KAAMA,EACNC,OAAQA,O,mCAKCoC,GAAK,IAAD,OACfzC,KAAKC,MAAM0B,UAAUf,aAAa6B,GACjCZ,MAAK,kBAAM,EAAKC,iB,0CAKjB9B,KAAK8B,c,yCAIY,IAAD,OAChB,OAAO9B,KAAKmB,MAAMuC,UAAUM,KAAI,SAAC3B,EAAO4B,GAAR,OAC9B,cAAC,EAAD,CACAF,IAAO1B,EAAM0B,IACb7D,KAAQmC,EAAMnC,KACdC,SAAYkC,EAAMlC,SAClBC,KAAQiC,EAAMjC,KACdC,OAAUgC,EAAMhC,OAChBK,UAAa2B,EAAM3B,UACnBG,OAAU,SAACoD,GAAD,OAAO,EAAKH,YAAYzB,EAAM0B,MACxCnD,aAAgB,SAACqD,GAAD,OAAO,EAAKrD,aAAayB,EAAM0B,MAC/ChD,UAAa,SAACkD,GAAD,OAAO,EAAKlD,UAAUsB,EAAM0B,IAAK1B,EAAMnC,KAAMmC,EAAMlC,SAAUkC,EAAMjC,KAAMiC,EAAMhC,UAT9E4D,Q,+BAaP,IAAD,OACN,OACE,qCACA,mDACA,cAAC,EAAD,CAAKtC,UAAa3B,KAAKC,MAAM0B,UACxBG,UAAa,kBAAM,EAAKA,aACxBO,MAASrC,KAAKmB,MAAMJ,YAEzB,oDACA,+BAAKf,KAAKmB,MAAMuC,UAAUQ,OAA1B,aACA,8BAAMhC,KAAKC,UAAUnC,KAAKmB,MAAMJ,aAChC,eAACoD,EAAA,EAAD,CAAOC,YAAU,EAAjB,UACE,gCACE,+BACE,uCACA,0CACA,sCACA,yCACA,2CACA,8CAGJ,gCACGpE,KAAKqE,+B,GAzFGrD,IAAMC,W,iBCRrBqD,EAAM,uEAEC3C,EAAb,+FAESiC,GACL,OAAIA,EAASW,QAAU,KAAOX,EAASW,OAAS,IACvCC,QAAQC,QAAQb,GAEhBY,QAAQE,OAAO,IAAIC,MAAOf,EAASgB,SANhD,8BAUUC,EAASP,EAAMT,GACrB,OAAOiB,IAAM,CACXD,SACAP,MACAT,SAEDhC,KAAK7B,KAAKuE,QACVQ,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZG,MAAMH,QAnBZ,qCA0BI,OAAOhF,KAAKoF,QAAQ,MAAb,UAAuBd,EAAvB,aA1BX,kCA8Bc7B,GACV,OAAOzC,KAAKoF,QAAS,SAAd,UAA4Bd,EAA5B,iBAAwC7B,MA/BnD,+BAmCWvC,EAAMC,EAAUC,EAAMC,GAC7B,OAAOL,KAAKoF,QAAQ,OAAb,UAAyBd,EAAzB,gBAA4C,CAAEpE,OAAMC,WAAUC,OAAMC,aApC/E,mCAwCeoC,GACX,OAAOzC,KAAKoF,QAAQ,MAAb,UAAuBd,EAAvB,kBAAoC7B,MAzC/C,8C,wBCoCe4C,G,wDAtBb,WAAYpF,GAAQ,IAAD,8BACjB,cAAMA,IACD0B,UAAY,IAAIA,EAFJ,E,qDAMnB,OACE,mCACE,eAAC2D,EAAA,EAAD,CAAWxE,UAAU,MAArB,UAEE,cAACyE,EAAA,EAAD,CAAQ9E,QAAQ,OAAO+E,OAAO,KAAK1E,UAAU,eAA7C,SACE,cAACyE,EAAA,EAAOE,MAAR,6BAGF,cAAC,EAAD,CAAQ9D,UAAa3B,KAAK2B,qB,GAfhBX,IAAMC,YCJTyE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/D,MAAK,YAAkD,IAA/CgE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrE,SAASC,eAAe,SAM1B0D,M","file":"static/js/main.c8ba7868.chunk.js","sourcesContent":["import React from 'react';\r\n//bootstrap components\r\nimport Button from 'react-bootstrap/button';\r\n\r\nclass Ecard extends React.Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n        <tr>\r\n        <td>{this.props.name}</td>\r\n        <td>{this.props.location}</td>\r\n        <td>{this.props.date}</td>\r\n        <td>{this.props.detail}</td>\r\n        <td> <Button style={{width: '3em'}} variant ={this.props.attending ? \"success\" : \"secondary\"} onClick = {() => this.props.toggleAttend()}>{this.props.attending ? \"Yes\":\"No\"}</Button></td>\r\n        <td>\r\n            <Button variant ='outline-danger' onClick = {() => this.props.remove()} >X</Button>\r\n            <Button variant = 'outline-info' className ='ml-2' onClick = {() => this.props.editEvent()}>Edit</Button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Ecard;","import React from 'react';\r\n\r\n//Bootstrap Components\r\nimport Form from 'react-bootstrap/form';\r\nimport Col from 'react-bootstrap/col';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass Add extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      disabled: false,  \r\n    }\r\n  }\r\n\r\n  changeHandler(e) {\r\n    const newstate ={};\r\n    newstate[e.target.name] = e.target.value;\r\n    this.setState(newstate)\r\n  }\r\n\r\n  submitHandler(e){\r\n    e.preventDefault()\r\n    this.setState({disabled:true})\r\n    \r\n    this.props.ApiClient.addEvent(this.state.name , this.state.location , this.state.date , this.state.detail)\r\n    .then(() => {\r\n      this.setState({disabled: false})\r\n      this.props.getEvents()\r\n      document.getElementById(\"addform\").reset()\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <>\r\n      <pre>AddForm = {JSON.stringify(this.state)}</pre>\r\n      <pre>Editing = {JSON.stringify(this.state.editing)}</pre>\r\n      <pre>Editing = {JSON.stringify(this.props.event)}</pre>\r\n      <pre>date = {String(this.props.event.date).slice(0,10)}</pre>\r\n        <Form id = \"addform\" className=\"mt-2 mb-2\" onSubmit = {(e) => this.submitHandler(e)}>\r\n          {/* FIRST ROW */}\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Group controlId=\"name\">\r\n                <Form.Control \r\n                  name=\"name\" type = \"text\"\r\n                  defaultValue = {this.props.event?.name}\r\n                  placeholder=\"Event Name\" \r\n                  onChange = {(e) => this.changeHandler(e)}\r\n                  disabled = {this.state.disabled}\r\n                  required\r\n                  />\r\n              </Form.Group>\r\n            </Col>\r\n          </Form.Row>\r\n          {/* SECOND ROW */}\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Group controlId=\"location\">\r\n                <Form.Control \r\n                  name=\"location\" \r\n                  defaultValue = {this.props.event?.location}\r\n                  type = \"text\" \r\n                  placeholder=\"Location\" \r\n                  onChange = {(e) => this.changeHandler(e)}\r\n                  disabled = {this.state.disabled}\r\n                  required\r\n                  />\r\n              </Form.Group>\r\n            </Col>\r\n          </Form.Row>\r\n          {/* THIRD ROW */}\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Group controlId=\"date\">\r\n                <Form.Control \r\n                  name=\"date\" \r\n                  defaultValue = {String(this.props.event?.date).slice(0,10)}\r\n                  type = \"date\" \r\n                  onChange = {(e) => this.changeHandler(e)}\r\n                  disabled = {this.state.disabled}\r\n                  required\r\n                  />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group controlId=\"time\">\r\n                <Form.Control \r\n                  name=\"time\"\r\n                  defaultValue = {this.state.time}\r\n                  type = \"time\" \r\n                  onChange = {(e) => this.changeHandler(e)}\r\n                  disabled = {this.state.disabled}\r\n                  />\r\n              </Form.Group>\r\n            </Col>\r\n          </Form.Row>\r\n          {/* FOURTH ROW */}\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Group controlId=\"detail\">\r\n                <Form.Control \r\n                  name=\"detail\" \r\n                  defaultValue = {this.props.event?.detail} \r\n                  type = \"text\" \r\n                  placeholder=\"Summary\" \r\n                  onChange = {(e) => this.changeHandler(e)}\r\n                  disabled = {this.state.disabled}\r\n                  required\r\n                  />\r\n              </Form.Group>\r\n            </Col>\r\n          </Form.Row>\r\n\r\n          <Button \r\n            className = 'mr-2'\r\n            variant = \"outline-success\" \r\n            type = \"submit\" disabled = {this.state.disabled}>\r\n            {this.props.event.name ? 'Update':'Submit'}</Button>\r\n\r\n          {/* <Button \r\n            style = {{visibility: this.props.event.name ? 'visible' : 'hidden'}}\r\n            variant = \"outline-danger\"\r\n            onClick = {() => document.getElementById(\"addform\").reset()}>Cancel</Button> */}\r\n        </Form>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Add;","import React from 'react';\r\n\r\n//components\r\nimport Ecard from './eCard';\r\nimport Add from './addForm';\r\n\r\n//Bootstrap\r\nimport Table from 'react-bootstrap/table';\r\n\r\nclass Etable extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      loading : true,\r\n      eventList : [],\r\n      editEvent: []\r\n    }\r\n  }\r\n\r\n  //Sets State of App.js to the event list retrived from the API\r\n  getEvents() {\r\n    this.props.ApiClient.getEventList()\r\n    .then((response) => this.setState({\r\n      loading: false,\r\n      eventList: response.data,\r\n      editEvent: []\r\n    }))\r\n    // this.forceUpdate();\r\n  }\r\n\r\n  // removes an event from the list\r\n  removeEvent(id) {\r\n    this.props.ApiClient.removeEvent(id)\r\n    .then(() => this.getEvents()) \r\n  }\r\n\r\n  // sets the event to be edited in state - which is then passed to Add for updating. \r\n  editEvent(id, name, location, date, detail) {\r\n    this.setState({\r\n      editEvent: {\r\n      _id: id,\r\n      name: name,\r\n      location: location,\r\n      date: date, \r\n      detail: detail}\r\n    }) \r\n  }\r\n\r\n  // toggles attending status\r\n  toggleAttend(id) {\r\n    this.props.ApiClient.toggleAttend(id)\r\n    .then(() => this.getEvents()) \r\n  }\r\n\r\n  //Lifecycle method - calls the required functions to start the app\r\n  componentDidMount() {\r\n    this.getEvents()\r\n  }\r\n\r\n  // creates a table of events from state\r\n  createEventsList(){\r\n    return this.state.eventList.map((event, i) => (\r\n      <Ecard key = {i}\r\n      _id = {event._id}\r\n      name = {event.name}\r\n      location = {event.location}\r\n      date = {event.date}\r\n      detail = {event.detail}\r\n      attending = {event.attending} \r\n      remove = {(i) => this.removeEvent(event._id)}\r\n      toggleAttend = {(i) => this.toggleAttend(event._id)}\r\n      editEvent = {(i) => this.editEvent(event._id, event.name, event.location, event.date, event.detail)} />\r\n      ))\r\n    }\r\n\r\n    render(){\r\n      return (\r\n        <>\r\n        <h4>Helper stuff FORM</h4>\r\n        <Add ApiClient = {this.props.ApiClient} \r\n             getEvents = {() => this.getEvents()}\r\n             event = {this.state.editEvent}     \r\n        />\r\n        <h4>Helper stuff TABLE</h4>\r\n        <h2>{this.state.eventList.length} events</h2>\r\n        <pre>{JSON.stringify(this.state.editEvent)}</pre>\r\n        <Table responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>Event</th>\r\n              <th>Location</th>\r\n              <th>Date</th>\r\n              <th>Summary</th>\r\n              <th>Attending</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.createEventsList()}\r\n          </tbody>\r\n        </Table>\r\n        </>\r\n      )\r\n  }\r\n} \r\n\r\nexport default Etable;","import axios from 'axios';\r\nconst url = 'https://cors-anywhere.herokuapp.com/https://eventstac.herokuapp.com/'\r\n\r\nexport class ApiClient {\r\n\r\n  status(response) {\r\n    if (response.status >= 200 && response.status < 300) {\r\n      return Promise.resolve(response);\r\n    } else {\r\n      return Promise.reject(new Error (response.text));\r\n    }\r\n  }\r\n\r\n  request(method , url , data) {\r\n    return axios({\r\n      method,\r\n      url,\r\n      data\r\n    })\r\n    .then(this.status)\r\n    .catch((error) => {\r\n      console.log(error)\r\n      alert(error)\r\n    })\r\n  }\r\n \r\n  // return list of all events\r\n  //https://eventstac.herokuapp.com/events\r\n  getEventList() {\r\n    return this.request('get' ,`${url}events`);\r\n  }\r\n  // delete event\r\n  //https://eventstac.herokuapp.com/event/delete\r\n  removeEvent(id){\r\n    return this.request( 'delete' , `${url}event/${id}`); \r\n  }\r\n  // add event\r\n  //https://eventstac.herokuapp.com/event/create\r\n  addEvent(name, location, date, detail){\r\n    return this.request('post' , `${url}event/create`, { name, location, date, detail })\r\n  }\r\n  //toggleattend\r\n  //https://eventstac.herokuapp.com/attend/<id>\r\n  toggleAttend(id){\r\n    return this.request('put', `${url}attend/${id}`)\r\n  }\r\n  //update event \r\n  //https://eventstac.herokuapp.com/event/<id>\r\n  updateEvent(){\r\n\r\n  }\r\n}","//https://deltadesign.github.io/eventstac/\n\nimport React from 'react';\n\n//components\nimport Etable from './components/eTable';\nimport { ApiClient } from './ApiClient';\n\n// bootstrap Components\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\n\n// Application CSS\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.ApiClient = new ApiClient();\n  }\n\n  render() {\n  return (\n    <>\n      <Container className=\"App\">\n\n        <Navbar variant=\"dark\" expand=\"sm\" className=\" mt-2 navbar\">\n          <Navbar.Brand>EventStagram</Navbar.Brand>\n        </Navbar>\n\n        <Etable ApiClient = {this.ApiClient}/>\n\n      </Container>\n    </>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}